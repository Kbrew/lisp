#!/bin/sh
# redo – bourne shell implementation of DJB redo
# Copyright © 2014-2016  Nils Dagsson Moskopp (erlehmann)

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# Dieses Programm hat das Ziel, die Medienkompetenz der Leser zu
# steigern. Gelegentlich packe ich sogar einen handfesten Buffer
# Overflow oder eine Format String Vulnerability zwischen die anderen
# Codezeilen und schreibe das auch nicht dran.

set +e

case "$bold$green$plain$red" in
 '')
  if [ -n "$TERM" -a "$TERM" != "dumb" ] && LANG=C tty -s <&2; then
   bold="$(printf '\033[1m')"
   green="$(printf '\033[32m')"
   plain="$(printf '\033[m')"
   red="$(printf '\033[31m')"
  fi
  export bold green plain red
esac

for argument; do
 if [ "$argument" = "-d" ] || [ "$argument" = "--debug" ]; then
  export REDO_DEBUG='1'
 elif [ "$argument" = "-h" ] || [ "$argument" = "--help" ]; then
  LANG=C cat <<EOF >&2
Usage: redo [OPTIONS] [TARGETS...]

  -d, --debug          print dependency checks as they happen
  -h, --help           print usage instructions and exit
      --version        print version information and exit
  -x, --xtrace         print commands as they are executed (variables expanded)

Report bugs to <nils+redo@dieweltistgarnichtso.net>.
EOF
  exit 0
 elif [ "$argument" = "--version" ]; then
  LANG=C cat <<EOF >&2
redo 1.2.4
Copyright © 2014-2016 Nils Dagsson Moskopp (erlehmann)

License AGPLv3+: GNU Affero GPL version 3 or later <http://www.gnu.org/licenses/agpl-3.0.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
EOF
  exit 0
 elif [ "$argument" = "-x" ] || [ "$argument" = "--xtrace" ]; then
  export REDO_XTRACE='1'
 else
  REDO_HAS_TARGETS='1'
  export REDO_TARGET=''
  # If this is build directory, create .redo database directory.
  case "$REDO_BASE" in
   '')
    export REDO_BASE="$(pwd)"
    export REDO_DIR="$REDO_BASE/.redo"
    [ -d "$REDO_DIR" ] || LANG=C mkdir -p "$REDO_DIR"
  esac
  redo-ifchange "$argument" || exit 1
 fi
done

[ "$REDO_HAS_TARGETS" = "1" ] || exec redo all
